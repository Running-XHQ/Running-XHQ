#define NOTE_D0 -1
#define NOTE_D1 523
#define NOTE_D2 587
#define NOTE_D3 659
#define NOTE_D4 698
#define NOTE_D5 784
#define NOTE_D6 880
#define NOTE_D7 988
#define NOTE_DL1 261
#define NOTE_DL2 294
#define NOTE_DL3 329
#define NOTE_DL4 349
#define NOTE_DL5 392
#define NOTE_DL6 440
#include <Adafruit_NeoPixel.h>
#define NOTE_DL7 493
#define NOTE_DH1 1046
#define NOTE_DH2 1175
#define NOTE_DH3 1318
#define NOTE_DH4 1397
#define NOTE_DH5 1568
#define NOTE_DH6 1760
#define NOTE_DH7 1976
//以上部分是定义是把每个音符和频率值对应起来，其实不用打这么多，但是都打上了，后面可以随意编写D调的各种歌，我这里用NOTE_D+数字表示音符，NOTE_DH+数字表示上面有点的那种高音符，NOTE_DL+数字表示下面有点的那种低音符。这样后面写起来比较好识别。 
#define WHOLE 4
#define HALF 2
#define QUARTER 1
#define EIGHTH 0.5
#define SIXTEENTH 0.25
//这部分是用英文对应了拍子，这样后面也比较好看 
#define buzzer_pin A0//定义蜂鸣器驱动引脚
#define buzzer_fre 100 //定义蜂鸣器输出频率
#define PIN 6   //led灯控制引脚
#define PIN_NUM 3 //允许接的led灯的个数
Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIN_NUM, PIN, NEO_GRB + NEO_KHZ800); int tune[] = { 
 NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,
 NOTE_D0,NOTE_DL5,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D1,
 NOTE_D0,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_D0,
 NOTE_DL5,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_DL5,NOTE_D2,NOTE_D3,
 
 NOTE_D0,NOTE_DL5,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,
 NOTE_D0,NOTE_DL5,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D1,
 NOTE_D0,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_D0,
 NOTE_DL5,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_DL5,NOTE_D5,NOTE_D3,NOTE_D4,NOTE_D5,
 NOTE_DL5,NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_DL5,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D1,NOTE_D2,NOTE_D1,NOTE_DL7,NOTE_D0,
 NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_DL5,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_DL5,NOTE_D5,NOTE_D3,NOTE_D2,NOTE_D2,
 NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_DL5,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_D1,NOTE_D2,
 NOTE_D0,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D3,NOTE_D2,
 NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,
 NOTE_D0,NOTE_DL5,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D1,
 NOTE_D0,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_D0,
 NOTE_DL5,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_DL5,NOTE_D2,NOTE_D3,
 
 NOTE_D0,NOTE_DL5,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,
 NOTE_D0,NOTE_DL5,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D1,
 NOTE_D0,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_D0,
 NOTE_DL5,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_DL5,NOTE_D5,NOTE_D3,NOTE_D4,NOTE_D5,
 NOTE_DL5,NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_DL5,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D1,NOTE_D2,NOTE_D1,NOTE_DL7,NOTE_D0,
 NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_DL5,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_DL5,NOTE_D5,NOTE_D3,NOTE_D2,NOTE_D2,
 NOTE_D3,NOTE_D2,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_DL5,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D5,NOTE_D1,NOTE_D2,
 NOTE_D0,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_D1,NOTE_DL6,NOTE_D5,NOTE_D6,NOTE_D6,
 NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,NOTE_D3,NOTE_D2,
 
 NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D2,NOTE_D3,NOTE_D5,NOTE_D5,
 NOTE_D0,NOTE_DL5,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D1,
 NOTE_D0,NOTE_D1,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_D0,
 NOTE_DL5,NOTE_D1,NOTE_D2,NOTE_D3,NOTE_D1,NOTE_DL5,NOTE_D2,NOTE_D3,
};//这部分就是整首曲子的音符部分，用了一个序列定义为tune，整数 
float duration[]= { 
 0.5,0.5,0.5,0.5,0.5,0.5,4,
 0.5+0.25,0.25,1+0.5,0.25,0.25+0.5,0.5+4,
 0.5,0.5,0.5,0.5,0.5,0.5+1,0.5,
 0.5,0.5,0.5,0.5,1,1,0.5+1+0.5,0.5+2+1+2,
 
 0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,4,
 0.5+0.25,0.25,1+0.5,0.25,0.25+0.5,0.5+4,
 0.5,0.5,0.5,0.5,0.5,0.5+1,0.5,
 0.5,0.5,0.5,0.5,1,1,1,2,1,2,
 0.5,0.5,1,1,1,1,0.5,0.5,0.5,0.5,1,1+0.5,
 0.5,0.5,0.5,1,1,1,0.5+2+0.5,1,0.5,1,
 0.5,0.5,0.5,0.5,0.5,0.5,0.5,1,1,
 0.5,0.5,0.5,0.5,1,0.5,0.5,0.5,0.5,0.5+2,
 0.5,1,0.5+1,1,0.5,0.5,0.5,0.5,0.5,1,1,
 0.5,0.5,0.5,0.5,1,0.5,0.5,1,0.5+2,
 0.5,0.5,0.5,0.5+1,0.5,0.5,1+0.5,0.5,0.5,1,1,
 1,0.5,0.5,1,1,1,0.5+4,
 0.5,0.5,0.5,0.5,0.5,0.5,4,
 0.5+0.25,0.25,1+0.5,0.25,0.25+0.5,0.5+4,
 0.5,0.5,0.5,0.5,0.5,0.5+1,0.5,
 0.5,0.5,0.5,0.5,1,1,0.5+1+0.5,0.5+2+1+2,
 
 0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,4,
 0.5+0.25,0.25,1+0.5,0.25,0.25+0.5,0.5+4,
 0.5,0.5,0.5,0.5,0.5,0.5+1,0.5,
 0.5,0.5,0.5,0.5,1,1,1,2,1,2,
 0.5,0.5,1,1,1,1,0.5,0.5,0.5,0.5,1,1,
 0.5,0.5,0.5,1,1,1,0.5+2+0.5,1,0.5,1,
 0.5,0.5,0.5,0.5,0.5,0.5,0.5,1,1,
 0.5,0.5,0.5,0.5,1,0.5,0.5,0.5,0.5,0.5+2,
 0.5,1,0.5+1,1,0.5,0.5,0.5,0.5,0.5,1,1,
 0.5,0.5,0.5,0.5,1,0.5,0.5,1,0.5+2,
 0.5,0.5,0.5,0.5+1,0.5,0.5,1+0.5,0.5,0.5,1,1,
 1,0.5,0.5,1,1,1,0.5+4,
 0.5,0.5,0.5,0.5,0.5,0.5,4,
 0.5+0.25,0.25,1+0.5,0.25,0.25+0.5,0.5+4,
 0.5,0.5,0.5,0.5,0.5,0.5+1,0.5,
 0.5,0.5,0.5,0.5,1,1,2,0.5+4
};//这部分是整首曲子的接拍部分，也定义个序列duration，浮点（数组的个数和前面音符的个数是一样的，一一对应） int length;//这里定义一个变量，后面用来表示共有多少个音符 int tonePin=A0;//蜂鸣器的pin 
void setup() { 
 strip.begin();
 pinMode(tonePin,OUTPUT);//设置蜂鸣器的pin为输出模式
 length = sizeof(tune)/sizeof(tune[0]);//这里用了一个sizeof函数，可以查出tone序列里有多少个音符
} 
void loop() { 
 strip.setPixelColor(0, strip.Color(255, 0, 0));//红
 strip.show();
 delay(100);
 strip.setPixelColor(0, strip.Color(0, 255, 0));//绿
 strip.show();
 delay(100);
 strip.setPixelColor(0, strip.Color(0, 0, 255));//蓝
 strip.show();
 delay(100);
 strip.setPixelColor(0, strip.Color(0, 0, 0));//灭
 strip.show();
 delay(100);
 strip.setPixelColor(0, strip.Color(200, 100, 0));//红
 strip.show();
 delay(100);
 strip.setPixelColor(0, strip.Color(100, 200, 100));//红
 strip.show();
 delay(100);
 strip.setPixelColor(0, strip.Color(0, 100, 100));//红
 strip.show();
 delay(100);
  strip.setPixelColor(0, strip.Color(50, 120, 255));//红
 strip.show();
 delay(100);
  strip.setPixelColor(0, strip.Color(10, 55, 2000));//红
 strip.show();
 delay(100);
  strip.setPixelColor(0, strip.Color(0, 1000, 100));//红
 strip.show();
 delay(100);
  
 for(int x=0;x<length;x++)//循环音符的次数
 {
   tone(tonePin,tune[x]);//此函数依次播放tune序列里的数组，即每个音符
   delay(500*duration[x]);//每个音符持续的时间，即节拍duration，500是调整时间的越大，曲子速度越慢，越小曲子速度越快，自己掌握吧
   noTone(tonePin);//停止当前音符，进入下一音符
 }
 delay(5000);//等待5秒后，循环重新开始
} 
